{"ast":null,"code":"var _jsxFileName = \"/Users/pancharapon/Desktop/visualrecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '7e9f6f863fab48ac9288fe8d30c82466'\n});\nconst ParticleOption = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    line_linked: {\n      enable_auto: true,\n      distance: 120,\n      color: '#061e6e',\n      opacity: 0.4\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.displayPage = page => {\n      this.setState({\n        page: page\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log('Opp!'));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: '',\n      page: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      params: ParticleOption,\n      className: \"Particle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    }), this.state.page === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pancharapon/Desktop/visualrecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Signin","Particles","Clarifai","app","App","apiKey","ParticleOption","particles","number","value","density","enable","value_area","line_linked","enable_auto","distance","color","opacity","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","displayPage","page","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: '7e9f6f863fab48ac9288fe8d30c82466'\n});\n\nconst ParticleOption = {\n\tparticles: {\n\t  number: {\n\t\t  value: 60,\n\t\t  density: {\n\t\t\t  enable: true,\n\t\t\t  value_area: 800\n\t\t  }\n\t  },\n\t  line_linked: {\n\t  \tenable_auto: true,\n\t  \tdistance: 120,\n\t  \tcolor: '#061e6e',\n\t  \topacity: 0.4\n\t  }\n\t}\n}\n\nclass App extends Component {\n  \n  constructor() {\n  \tsuper()\n  \tthis.state = {\n  \t\tinput: '',\n      imageUrl: '',\n      box: '',\n      page: ''\n  \t}\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  displayPage = (page) => {\n    this.setState({page: page})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onButtonSubmit = () => {\n  \tthis.setState({imageUrl: this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log('Opp!'))\n  }\n\n\n\n  render() { \n    return (\n  \t  <div className='App'>\n  \t    <Particles \n          params={ParticleOption}\n          className='Particle' />\n  \t    <Navigation />\n        { this.state.page === 'signin'\n        ? <Signin />\n  \t    : <div>\n            <Logo />\n  \t        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n            <FaceRecognition box={this.state.box}  imageUrl={this.state.imageUrl}/>\n          </div>\n        }\n  \t  </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}